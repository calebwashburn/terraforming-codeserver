#!/bin/bash -e

function downloadFile {
    while [ 1 ]; do
        set +e
        wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue $1 -O $2
        if [ $? = 0 ]; then break; 
          set -e
        fi; # check return value, break if successful (0)
        sleep 1s;
    done;
}

mkdir -p /var/www-code-server/html
apt-get install nginx -y

cat << EOF > /var/www-code-server/html/index.html
<!DOCTYPE html>
<html>
<head>
<title>Welcome to your code server instance</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to your code server instance</h1>
<p>If you see this page things are still being provisioned, please refresh as generally takes about 5 minutes to deploy.</p>
</body>
</html>
EOF

echo "${CODESERVER_PRIVATEKEY}" > /var/www-code-server/key.pem
echo "${CODESERVER_CERTIFICATE}" > /var/www-code-server/cert.pem

rm -rf /etc/nginx/sites-available/default
cat << EOF > /etc/nginx/sites-available/default
server {
    listen 80 default_server;
    server_name ${HOST_NAME};
    return 301 https://\$host\$request_uri;
}
server {
	# SSL configuration
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
    server_name _;	
	ssl_certificate     /var/www-code-server/cert.pem;
    ssl_certificate_key /var/www-code-server/key.pem;
    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    # Enable server-side protection against BEAST attacks
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";
	root /var/www-code-server/html;
	index index.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files \$uri \$uri/ =404;
	}
}
EOF
systemctl restart nginx

apt-get update -y
apt-get install build-essential apt-transport-https ca-certificates curl gnupg-agent software-properties-common libarchive-tools xdg-utils -y
downloadFile https://download.docker.com/linux/ubuntu/gpg /tmp/gpg
cat /tmp/gpg | apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
apt-get update -y
apt-get install docker-ce docker-ce-cli containerd.io -y

downloadFile https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz /tmp/golang.tgz
tar -C /usr/local -xzf /tmp/golang.tgz
rm -rf /tmp/golang.tgz

adduser --shell /bin/bash --disabled-login --gecos codeserver codeserver
usermod -aG docker codeserver

cat << EOF > /home/codeserver/.bash_profile
export GOPATH=\$HOME/go
export PATH=\$GOPATH/bin:/usr/local/go/bin:\$PATH
EOF

chmod +x /home/codeserver/.bash_profile
chown codeserver:codeserver /home/codeserver/.bash_profile
echo ". ~/.bash_profile" >> /home/codeserver/.bashrc

#install kind
downloadFile https://kind.sigs.k8s.io/dl/v0.8.0/kind-$(uname)-amd64 kind
chmod +x kind 
mv kind /usr/bin/kind

#install kubectl
downloadFile https://storage.googleapis.com/kubernetes-release/release/v1.18.2/bin/linux/amd64/kubectl kubectl
chmod +x kubectl 
mv kubectl /usr/bin/kubectl

echo 'source <(kubectl completion bash)' >>/home/codeserver/.bashrc

mkdir -p /var/code-server
downloadFile https://github.com/cdr/code-server/releases/download/${CODESERVER_VERSION}/code-server-${CODESERVER_VERSION}-linux-x86_64.tar.gz /tmp/code_server.tgz
tar -C /var/code-server -xvf /tmp/code_server.tgz --strip-components=1
chown codeserver:codeserver -R /var/code-server
rm -rf /tmp/code_server.tgz

cat << EOF > /var/code-server/start.sh
#!/bin/bash -e
PASSWORD=${CODESERVER_PASSWORD} nohup /var/code-server/code-server > /var/code-server/start.log 2>&1 &
EOF
chmod +x /var/code-server/start.sh
# start code server
su codeserver -c /var/code-server/start.sh

cat << EOF > /etc/nginx/conf.d/codeserver.conf
server {
    listen 443 ssl; 

    server_name ${HOST_NAME};

    ssl_certificate     /var/www-code-server/cert.pem;
    ssl_certificate_key /var/www-code-server/key.pem;

    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Enable server-side protection against BEAST attacks
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";
    
    location / {
        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        proxy_pass http://127.0.0.1:8080;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header Host \$http_host;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        #proxy_set_header X-NginX-Proxy true;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;

    }
}
EOF
systemctl restart nginx

mkdir -p /home/codeserver/.local/share/code-server/extensions
chown codeserver:codeserver -R /home/codeserver/.local
pushd /tmp
    downloadFile https://github.com/microsoft/vscode-go/releases/download/"${GO_VSCODE_VERSION}"/Go-"${GO_VSCODE_VERSION}".vsix go.vsix
    bsdtar -xvf go.vsix
    mv extension/ /home/codeserver/.local/share/code-server/extensions/Go-"${GO_VSCODE_VERSION}"
    rm -rf go.vsix
popd

rm -rf /home/codeserver/.local/share/code-server/User/settings.json
mkdir -p /home/codeserver/.local/share/code-server/User
cat << EOF > /home/codeserver/.local/share/code-server/User/settings.json
{
    "go.useLanguageServer": true,
    "[go]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
        // Optional: Disable snippets, as they conflict with completion ranking.
        "editor.snippetSuggestions": "none",
    },
    "[go.mod]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
    },
    "gopls": {
        // Add parameter placeholders when completing a function.
        "usePlaceholders": true,
        // If true, enable additional analyses with staticcheck.
        // Warning: This will significantly increase memory usage.
        "staticcheck": false,
    },
}
EOF

chown codeserver:codeserver -R /home/codeserver/.local